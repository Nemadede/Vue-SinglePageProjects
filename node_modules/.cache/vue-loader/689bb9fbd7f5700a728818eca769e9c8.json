{"remainingRequest":"/usr/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/usr/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/nema-love/New Volume/School stuff/web developmt/Vue/Vue CLI/Vue-SinglePageProjects/todo.vue?vue&type=template&id=0a61bdd4&","dependencies":[{"path":"/media/nema-love/New Volume/School stuff/web developmt/Vue/Vue CLI/Vue-SinglePageProjects/todo.vue","mtime":1571797281647},{"path":"/usr/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/usr/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { attrs: { id: \"todoApp\" } },\n    [\n      _c(\n        \"div\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.pagechanger == 0,\n              expression: \"pagechanger == 0\"\n            }\n          ],\n          staticClass: \"add\"\n        },\n        [\n          _c(\"nav\", [\n            _c(\"div\", { staticClass: \"newList\" }, [\n              _c(\n                \"button\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.value == 1,\n                      expression: \"value==1\"\n                    }\n                  ],\n                  on: {\n                    click: function($event) {\n                      _vm.toggle = !_vm.toggle\n                    }\n                  }\n                },\n                [_vm._v(\"New List\")]\n              ),\n              _c(\n                \"form\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.toggle == true,\n                      expression: \"toggle == true\"\n                    }\n                  ],\n                  ref: \"form\",\n                  on: {\n                    submit: function($event) {\n                      $event.preventDefault()\n                      return _vm.onSubmit($event)\n                    }\n                  }\n                },\n                [\n                  _c(\"label\", { attrs: { for: \"name\" } }, [\n                    _vm._v(\"list name\")\n                  ]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.listName,\n                        expression: \"listName\"\n                      }\n                    ],\n                    ref: \"list_name\",\n                    attrs: { type: \"text\", name: \"name\", required: \"\" },\n                    domProps: { value: _vm.listName },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.listName = $event.target.value\n                      }\n                    }\n                  }),\n                  _c(\"section\", { staticClass: \"btns\" }, [\n                    _c(\n                      \"button\",\n                      { attrs: { type: \"button\" }, on: { click: _vm.cancle } },\n                      [_vm._v(\"Cancle\")]\n                    ),\n                    _c(\"button\", { on: { click: _vm.onSubmit } }, [\n                      _vm._v(\"Create list\")\n                    ])\n                  ])\n                ]\n              )\n            ]),\n            _c(\"div\", { attrs: { id: \"todo_main_btns\" } }, [\n              _c(\n                \"button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.value = 1\n                    }\n                  }\n                },\n                [_vm._v(\"Lists\")]\n              ),\n              _c(\n                \"button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.value = 2\n                    }\n                  }\n                },\n                [_vm._v(\"Today\")]\n              ),\n              _c(\n                \"button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.value = 3\n                    }\n                  }\n                },\n                [_vm._v(\"Schedule\")]\n              )\n            ]),\n            _c(\"div\")\n          ]),\n          _c(\"div\", { attrs: { id: \"body\" } }, [\n            _vm.value == 1\n              ? _c(\"section\", { staticClass: \"list_container\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"box_container\" },\n                    _vm._l(_vm.names, function(name, index) {\n                      return _c(\n                        \"div\",\n                        {\n                          key: name.id,\n                          ref: \"box_ref\",\n                          refInFor: true,\n                          staticClass: \"box\"\n                        },\n                        [\n                          _c(\"div\", [\n                            _c(\n                              \"div\",\n                              {\n                                attrs: { id: \"box\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.pagechangerfunc(name)\n                                  }\n                                }\n                              },\n                              [\n                                _c(\n                                  \"a\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"show\",\n                                        rawName: \"v-show\",\n                                        value: _vm.show == true,\n                                        expression: \"show == true\"\n                                      }\n                                    ]\n                                  },\n                                  [_vm._v(_vm._s(index))]\n                                )\n                              ]\n                            ),\n                            _c(\n                              \"div\",\n                              {\n                                ref: \"spec_title\",\n                                refInFor: true,\n                                staticClass: \"box_name\",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.pagechangerfunc(name)\n                                  }\n                                }\n                              },\n                              [_c(\"span\", [_vm._v(_vm._s(name.name))])]\n                            )\n                          ])\n                        ]\n                      )\n                    }),\n                    0\n                  )\n                ])\n              : _vm._e(),\n            _vm.value == 2\n              ? _c(\"section\", [_vm._v(\"This is section two\")])\n              : _vm._e(),\n            _vm.value == 3\n              ? _c(\"section\", [_vm._v(\"This is section three\")])\n              : _vm._e()\n          ])\n        ]\n      ),\n      _vm._l(_vm.names, function(name) {\n        return _c(\"div\", { key: name.id }, [\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: name.is_in_use == true,\n                  expression: \"name.is_in_use == true\"\n                }\n              ],\n              staticClass: \"schedule_from_list\",\n              attrs: { id: \"list_page\" }\n            },\n            [\n              _c(\"nav\", [\n                _c(\"div\", { staticClass: \"back_btn\" }, [\n                  _c(\n                    \"a\",\n                    {\n                      on: {\n                        click: function($event) {\n                          ;(name.is_in_use = false), (_vm.pagechanger = 0)\n                        }\n                      }\n                    },\n                    [_vm._v(\"back\")]\n                  )\n                ]),\n                _c(\"div\", { staticClass: \"list-title\" }, [\n                  _c(\"span\", [_c(\"i\", [_vm._v(_vm._s(name.name))])])\n                ]),\n                _c(\"div\")\n              ]),\n              _c(\"div\", { staticClass: \"todo_body_list\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"todo_list_container\" },\n                  [\n                    _vm._l(name.tasklist, function(task, index) {\n                      return _c(\n                        \"div\",\n                        {\n                          key: task.taskid,\n                          ref: \"contain\",\n                          refInFor: true,\n                          staticClass: \"todos\"\n                        },\n                        [\n                          _c(\n                            \"form\",\n                            { style: { \"border-left-color\": _vm.sidecolor } },\n                            [\n                              _c(\"div\", { attrs: { id: \"displayed\" } }, [\n                                _vm._m(0, true),\n                                _c(\"div\", { staticClass: \"nameholder\" }, [\n                                  _c(\"input\", {\n                                    attrs: { type: \"text\" },\n                                    domProps: { value: task.task_name }\n                                  })\n                                ]),\n                                _c(\"div\", { staticClass: \"time_dd\" }, [\n                                  _c(\"span\", [_vm._v(_vm._s(task.dueDate))]),\n                                  _c(\n                                    \"i\",\n                                    {\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.extendfunc($event)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _c(\n                                        \"svg\",\n                                        {\n                                          attrs: {\n                                            viewBox: \"0 0 451 451\",\n                                            width: \"13\"\n                                          }\n                                        },\n                                        [\n                                          _c(\"path\", {\n                                            attrs: {\n                                              d:\n                                                \"M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751\\n\\t\\tc12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0\\n\\t\\tc12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z\",\n                                              fill: \"#000\"\n                                            }\n                                          })\n                                        ]\n                                      )\n                                    ]\n                                  )\n                                ])\n                              ]),\n                              _c(\n                                \"div\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"show\",\n                                      rawName: \"v-show\",\n                                      value: _vm.extended == true,\n                                      expression: \" extended == true\"\n                                    }\n                                  ],\n                                  attrs: { id: \"extension\" }\n                                },\n                                [\n                                  _vm._m(1, true),\n                                  _c(\"div\", { staticClass: \"time_priority\" }, [\n                                    _c(\"div\", { staticClass: \"time_btns\" }, [\n                                      _c(\"label\", [_vm._v(\"Due Date\")]),\n                                      _c(\n                                        \"div\",\n                                        { attrs: { id: \"style\" } },\n                                        [\n                                          _c(\n                                            \"button\",\n                                            {\n                                              attrs: { type: \"button\" },\n                                              on: {\n                                                click: function($event) {\n                                                  return _vm.datefunction(\n                                                    $event,\n                                                    task\n                                                  )\n                                                }\n                                              }\n                                            },\n                                            [_vm._v(\"Today\")]\n                                          ),\n                                          _c(\n                                            \"button\",\n                                            {\n                                              attrs: { type: \"button\" },\n                                              on: {\n                                                click: function($event) {\n                                                  return _vm.datefunction(\n                                                    $event,\n                                                    task\n                                                  )\n                                                }\n                                              }\n                                            },\n                                            [_vm._v(\"Tomorrow\")]\n                                          ),\n                                          _c(\"datepicker\", {\n                                            attrs: {\n                                              lang: \"en\",\n                                              type: \"date\",\n                                              format: \"YYYY-MM-DD\",\n                                              placeholder: \"no date set\",\n                                              width: \"150\"\n                                            },\n                                            on: {\n                                              change: function($event) {\n                                                return _vm.datefunction(\n                                                  $event,\n                                                  task\n                                                )\n                                              }\n                                            },\n                                            model: {\n                                              value: _vm.date,\n                                              callback: function($$v) {\n                                                _vm.date = $$v\n                                              },\n                                              expression: \"date\"\n                                            }\n                                          })\n                                        ],\n                                        1\n                                      )\n                                    ]),\n                                    _c(\"div\", { staticClass: \"priorities\" }, [\n                                      _c(\"label\", [_vm._v(\"Priority\")]),\n                                      _c(\n                                        \"select\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.pcolor,\n                                              expression: \"pcolor\"\n                                            }\n                                          ],\n                                          attrs: { id: \"pcolor_selector\" },\n                                          on: {\n                                            change: [\n                                              function($event) {\n                                                var $$selectedVal = Array.prototype.filter\n                                                  .call(\n                                                    $event.target.options,\n                                                    function(o) {\n                                                      return o.selected\n                                                    }\n                                                  )\n                                                  .map(function(o) {\n                                                    var val =\n                                                      \"_value\" in o\n                                                        ? o._value\n                                                        : o.value\n                                                    return val\n                                                  })\n                                                _vm.pcolor = $event.target\n                                                  .multiple\n                                                  ? $$selectedVal\n                                                  : $$selectedVal[0]\n                                              },\n                                              _vm.checkPriority\n                                            ]\n                                          }\n                                        },\n                                        [\n                                          _c(\n                                            \"option\",\n                                            { attrs: { value: \"none\" } },\n                                            [_vm._v(\"None\")]\n                                          ),\n                                          _c(\n                                            \"option\",\n                                            { attrs: { value: \"blue\" } },\n                                            [_vm._v(\"Low\")]\n                                          ),\n                                          _c(\n                                            \"option\",\n                                            { attrs: { value: \"orange\" } },\n                                            [_vm._v(\"Medium\")]\n                                          ),\n                                          _c(\n                                            \"option\",\n                                            { attrs: { value: \"red\" } },\n                                            [_vm._v(\"High\")]\n                                          )\n                                        ]\n                                      )\n                                    ]),\n                                    _c(\"div\", { staticClass: \"del\" }, [\n                                      _c(\n                                        \"button\",\n                                        {\n                                          attrs: { type: \"button\" },\n                                          on: { click: _vm.deleteTask }\n                                        },\n                                        [_vm._v(\"delete\")]\n                                      )\n                                    ])\n                                  ])\n                                ]\n                              )\n                            ]\n                          )\n                        ]\n                      )\n                    }),\n                    _c(\"div\", { staticClass: \"todoMaker\" }, [\n                      _c(\"div\", { staticClass: \"adder\" }, [\n                        _c(\n                          \"i\",\n                          {\n                            on: {\n                              click: function($event) {\n                                return _vm.nameTodo(name)\n                              }\n                            }\n                          },\n                          [_vm._v(\"plus\")]\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"namer\" }, [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.taskname,\n                              expression: \"taskname\"\n                            }\n                          ],\n                          attrs: {\n                            type: \"text\",\n                            id: \"todo_name\",\n                            placeholder: \"New task...\",\n                            required: \"\"\n                          },\n                          domProps: { value: _vm.taskname },\n                          on: {\n                            keyup: function($event) {\n                              if (\n                                !$event.type.indexOf(\"key\") &&\n                                _vm._k(\n                                  $event.keyCode,\n                                  \"enter\",\n                                  13,\n                                  $event.key,\n                                  \"Enter\"\n                                )\n                              ) {\n                                return null\n                              }\n                              return _vm.nameTodo(name)\n                            },\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.taskname = $event.target.value\n                            }\n                          }\n                        })\n                      ])\n                    ])\n                  ],\n                  2\n                )\n              ])\n            ]\n          )\n        ])\n      })\n    ],\n    2\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"checked\" }, [\n      _c(\"input\", { attrs: { type: \"checkbox\" } })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"notes_container\" }, [\n      _c(\"label\", [_vm._v(\"Notes\")]),\n      _c(\"textarea\", { attrs: { cols: \"35\", rows: \"14\" } })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}